name: 🏞️ Icon Review

on:
  pull_request_target:
    paths:
      # Only trigger the workflow if SVG files in the icons directory are changed
      - "icons/*.svg"

# Permissions for the workflow
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  icon-review:
    name: Icon Review
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: 🔧 Setup Bun
        uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2

        with:
          bun-version-file: ".bun-version"

      - name: 🔍 Get changed SVG files
        id: get_changed_files
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const svgFiles = files
              .filter(file => file.filename.startsWith('icons/') && file.filename.endsWith('.svg'))
              .map(file => file.filename);

            const changedSvgFilesCount = svgFiles.length;

            core.setOutput('changed_svg_files', svgFiles.join(' '));
            core.setOutput('changed_svg_files_count', changedSvgFilesCount);

      - name: 🔍 Review SVG files
        run: |
          bunx svg-icon-review@2.1.0 --bigIcon ${{ steps.get_changed_files.outputs.changed_svg_files }}

      - name: ⬆️ Upload preview image
        env:
          IMAGE_UPLOAD: ${{ secrets.IMAGE_UPLOAD }}
        run: |
          IMAGE_URL=$(curl --location 'https://freeimage.host/json' \
            --form 'source=@"./preview.png"' \
            --form 'type="file"' \
            --form 'action="upload"' \
            --form "auth_token=${{ env.IMAGE_UPLOAD }}" | jq -r '.image.url')

          echo "image_url=$IMAGE_URL" >> $GITHUB_ENV

      - name: ✍️ Post or update comment
        uses: actions/github-script@v7.0.1
        env:
          changed_svg_files_count: ${{ steps.get_changed_files.outputs.changed_svg_files_count }}
          image_url: ${{ env.image_url }}
        with:
          script: |
            const iconsCount = parseInt(process.env.changed_svg_files_count);
            const imageURL = process.env.image_url;
            const pluralSuffix = iconsCount > 1 ? 's' : '';
            const image = `<img src="${imageURL}" alt="Generated preview" />`;

            let preview = iconsCount > 10
              ? `<details><summary>🏞️ <b>Generated preview</b></summary><br/>${image}</details>`
              : image;

            const commentBody = `
              <!-- Preview generated by GitHub Actions -->
              ## Preview

              Thank you for creating a pull request. This preview shows you how your icon${pluralSuffix} will look on the different themes:

              ${preview}

              Check how your icon${pluralSuffix} fit${pluralSuffix ? '' : 's'} into a 16x16 grid with our **Pixel Perfect Checker** by following [this link](https://pixp.pages.dev/material-extensions/vscode-material-icon-theme/pull/${{ github.event.pull_request.number }}).

              You can find more information on how to contribute in the [contribution guidelines](https://github.com/material-extensions/vscode-material-icon-theme/blob/main/CONTRIBUTING.md).
            `;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.find(comment =>
              comment.user.login === 'github-actions[bot]' &&
              comment.body.includes('<!-- Preview generated by GitHub Actions -->')
            );

            const comment = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody,
            };

            if (existingComment) {
              await github.rest.issues.updateComment({
                comment_id: existingComment.id,
                ...comment
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                ...comment
              });
            }
